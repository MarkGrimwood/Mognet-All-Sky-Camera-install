#!/bin/bash

function installs() {
# Install the web server and enable it
  sudo apt-get -y install lighttpd php php-cgi php-gd
  sudo lighty-enable-mod fastcgi
  sudo lighty-enable-mod fastcgi-php
  sudo service lighttpd force-reload

  # Install ffmpeg so the day and night videos can be created
  sudo apt -y install ffmpeg

  # Imagemagick for adding text to images
  sudo apt -y install imagemagick
}

function setup() {
  # The shell scripts for cron have to be in a certain place, so we ensure that everything is in the install directory first
  if [ "$CURRENTDIRECTORY" != "$INSTALLDIRECTORY" ]; then
    echo "Cleaning execution directory $INSTALLDIRECTORY"
    [ -d $INSTALLDIRECTORY ] && rm -rf $INSTALLDIRECTORY
    echo "Copying the back end code"
    mkdir -p $INSTALLDIRECTORY/back-end/
    cp -rv $CURRENTDIRECTORY/back-end/* $INSTALLDIRECTORY/back-end/
    cp -rv $CURRENTDIRECTORY/gpsupdate $INSTALLDIRECTORY/gpsupdate
    cp -rv $CURRENTDIRECTORY/LICENSE $INSTALLDIRECTORY/LICENSE
    cp -rv $CURRENTDIRECTORY/README.md $INSTALLDIRECTORY/README.md
    sudo chmod +x $INSTALLDIRECTORY/back-end/pics/newmovie.sh
    sudo chmod +x $INSTALLDIRECTORY/back-end/pics/capture.sh
    sudo chmod +x $INSTALLDIRECTORY/back-end/mgasc.sh
    sudo chmod +x $INSTALLDIRECTORY/back-end/dailyupdate.sh
    sudo chmod +x $INSTALLDIRECTORY/gpsupdate
  fi

  ## Clean out the web directory and copy our stuff into it
  [ ! -d /var/www/html ] && sudo mkdir /var/www/html/
  sudo rm -r /var/www/html/*
  sudo cp -rv $CURRENTDIRECTORY/front-end/* /var/www/html/
  sudo mkdir /var/www/html/history
  sudo chown nobody /var/www/html/{history,*.php,*.html,*.gif,*.css}

  ## Make sunwait into and executable and copy it across to the common respository
  sudo chmod 755 $CURRENTDIRECTORY/back-end/sunwait/sunwait
  sudo cp -v $CURRENTDIRECTORY/back-end/sunwait/sunwait /usr/bin/

  ## Create the new day and night movies ready for execution start
  # We don't know if we're being deployed during the day or night, so both will be created ready
  # TODO - see about calling sunwait to determine day/night state
  cd $INSTALLDIRECTORY/back-end/pics/
  echo "Working in $PWD"
  sudo ./newmovie.sh day
  sudo ./newmovie.sh night

  ## Run the execution setup script
  # This will be the final item of the autodeploy script as execution starts immediately after
  # After deployment this will also be run daily at noon
  cd $INSTALLDIRECTORY/back-end/
  echo "Working in $PWD"
  sudo ./mgasc.sh
}

function getLatitude() {
  echo "Please enter the latitude (N or S) of your location, e.g. 52.20N"

  # Using 0 as true and -1 as false here
  testedGood=-1
  while [ $testedGood -ne 0 ];do
    read validateThis
    testLatLong "$validateThis" "N" "S" "n" "s"
    if [ $? -eq 0 ]; then
      llLength=${#validateThis}
      llNumeric=${validateThis:0:$llLength-1}
      llSide=${validateThis: -1}
      if [ "$llSide" == "n" ]; then
        llSide="N"
      fi
      if [ "$llSide" == "s" ]; then
        llSide="S"
      fi
      lat=$(printf "%.2f$llSide" "$llNumeric")
      testedGood=0
    else
      echo "Try again, $validateThis is invalid"
    fi
  done
}

function getLongitude() {
  echo "Please enter the longitude (E or W) of your location, e.g. 0.13E"

  # Using 0 as true and -1 as false here
  testedGood=-1
  while [ $testedGood -ne 0 ];do
    read validateThis
    testLatLong "$validateThis" "E" "W" "e" "w"
    if [ $? -eq 0 ]; then
      llLength=${#validateThis}
      llNumeric=${validateThis:0:$llLength-1}
      llSide=${validateThis: -1}
      if [ "$llSide" == "e" ]; then
        llSide="E"
      fi
      if [ "$llSide" == "w" ]; then
        llSide="W"
      fi
      lon=$(printf "%.2f$llSide" "$llNumeric")
      testedGood=0
    else
      echo "Try again, $validateThis is invalid"
    fi
  done
}

function testLatLong() {
  validateThis=${1}
  test1=${2}
  test2=${3}
  test3=${4}
  test4=${5}

  if [[ "$validateThis" =~ [0-9]+(\.([0-9]+)?)?[$test1|$test2|$test3|$test4] ]]; then
    latLength=${#validateThis}
    latNumeric=${validateThis:0:$latLength-1}
    latSide=${validateThis: -1}

    ch=""
    outStr="0"
    testLength=${#latNumeric}
    for ((i=0; i<$testLength; i++)); do
      ch=${latNumeric:i:1}
      if [ "$ch" != "." ]; then
        outStr="$outStr$ch"
      else
        i=$(( latLength + 1 ))
      fi
    done

    if [ $outStr -ge -180 ] && [ $outStr -le 180 ]; then
      ret=0
    else
      echo "Invalid: $validateThis, out of 0-180 range"
      ret=-1
    fi
  else
    echo "Invalid: $validateThis, invalid format"
    ret=1
  fi

  return $ret
}

function camera_check() {
  success=1
  VCSUPPORTED=$(vcgencmd get_camera | grep supported=1 | wc -l)
  VCENABLED=$(vcgencmd get_camera | grep detected=1 | wc -l)

  if [ $VCSUPPORTED -eq 0 ]; then
    echo "Please enable the camera through raspi-config before installing"
    success=0
  elif [ $VCENABLED -eq 0 ]; then
    echo "Please connect the camera before installing"
    success=0
  fi

  return $success
}

CURRENTDIRECTORY=$PWD
INSTALLDIRECTORY=~/Mognet-All-Sky-Camera

lat=0
lon=0

installGood=-1	# Using the values -1=false, 0=no install, 1=install

clear
echo "Welcome to the setup stage of Mognet's All Sky Camera"
echo "====================================================="
camera_check
if [ $? -eq 1 ]; then
  echo "This script has is intended to be run on a Raspberry Pi, preferably with a clean install of Raspian"
  echo "As part of the install process lighttpd, ffmpeg and imagemagick will be installed, the /var/www/html/ directory will be wiped and the front end code copied into it, and a cron job running once per minute during the day and every two minutes at night will be started to run 24 hours a day"
  echo "If you are certain that you want to proceed then answer Y to continue, otherwise N or Ctrl-C to exit"
else
  installGood=0
fi

while [ $installGood -eq -1 ]; do
  read installConfirm
  if [ "$installConfirm" == "y" ] || [ "$installConfirm" == "Y" ]; then
    installGood=1
  elif [ "$installConfirm" == "n" ] || [ "$installConfirm" == "N" ]; then
    installGood=0
  else
    echo "Please enter only Y or N"
  fi
done

if [ $installGood -eq 1 ]; then
  echo "The latitude and longitude of your camera location is required. This can be approximate as it's only used for the sunrise and sunset timings"
  getLatitude
  getLongitude

  echo "About to install the all sky camera code. This step will take a few minutes. Press enter when ready..."
  read installCheck
  installs
  setup
  echo -e "$lat\n$lon">$INSTALLDIRECTORY/back-end/gps

  echo "====================================================="
  echo ""
  echo "The all sky camera capture software has now been set up"
  echo "Location used is latitude $lat, longitude $lon"
  echo ""
  echo "Access to the images is from a web browser on the same network using either:"
  echo ""
  ipAddressList=($(hostname -I))
  echo "IP Address: http://${ipAddressList[0]}/" 
  echo "URL: http://$HOSTNAME/"
  echo ""
  echo "====================================================="
else
  echo "Install cancelled"
fi
