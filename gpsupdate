#!/bin/bash

function getLatitude() {
  echo "Please enter the latitude (N or S) of your location, e.g. 52.20N"

  # Using 0 as true and -1 as false here
  testedGood=-1
  while [ $testedGood -ne 0 ];do
    read validateThis
    testLatLong "$validateThis" "N" "S" "n" "s"
    if [ $? -eq 0 ]; then
      llLength=${#validateThis}
      llNumeric=${validateThis:0:$llLength-1}
      llSide=${validateThis: -1}
      if [ "$llSide" == "n" ]; then
        llSide="N"
      fi
      if [ "$llSide" == "s" ]; then
        llSide="S"
      fi
      lat=$(printf "%.2f$llSide" "$llNumeric")
      testedGood=0
    else
      echo "Try again, $validateThis is invalid"
    fi
  done
}

function getLongitude() {
  echo "Please enter the longitude (E or W) of your location, e.g. 0.13E"

  # Using 0 as true and -1 as false here
  testedGood=-1
  while [ $testedGood -ne 0 ];do
    read validateThis
    testLatLong "$validateThis" "E" "W" "e" "w"
    if [ $? -eq 0 ]; then
      llLength=${#validateThis}
      llNumeric=${validateThis:0:$llLength-1}
      llSide=${validateThis: -1}
      if [ "$llSide" == "e" ]; then
        llSide="E"
      fi
      if [ "$llSide" == "w" ]; then
        llSide="W"
      fi
      lon=$(printf "%.2f$llSide" "$llNumeric")
      testedGood=0
    else
      echo "Try again, $validateThis is invalid"
    fi
  done
}

function testLatLong() {
  validateThis=${1}
  test1=${2}
  test2=${3}
  test3=${4}
  test4=${5}

  if [[ "$validateThis" =~ [0-9]+(\.([0-9]+)?)?[$test1|$test2|$test3|$test4] ]]; then
    latLength=${#validateThis}
    latNumeric=${validateThis:0:$latLength-1}
    latSide=${validateThis: -1}

    ch=""
    outStr="0"
    testLength=${#latNumeric}
    for ((i=0; i<$testLength; i++)); do
      ch=${latNumeric:i:1}
      if [ "$ch" != "." ]; then
        outStr="$outStr$ch"
      else
        i=$(( latLength + 1 ))
      fi
    done

    if [ $outStr -ge -180 ] && [ $outStr -le 180 ]; then
      ret=0
    else
      echo "Invalid: $validateThis, out of 0-180 range"
      ret=-1
    fi
  else
    echo "Invalid: $validateThis, invalid format"
    ret=1
  fi

  return $ret
}


# Get the latitude and longitude from the gps file. Values were set in the autodeploy
arrGPS=($(cat back-end/gps))
lat=${arrGPS[0]}
lon=${arrGPS[1]}

installGood=-1	# Using the values -1=false, 0=no install, 1=install

clear
echo "This is the GPS change script for  Mognet's All Sky Camera"
echo "=========================================================="
echo "Use this script to change the GPS coordinates for your location"
echo "The current coordinates are $lat, $lon"
echo "If you are certain that you want to proceed then answer Y to continue, otherwise N or Ctrl-C to exit"

while [ $installGood -eq -1 ]; do
  read installConfirm
  if [ $installConfirm == "y" ] || [ $installConfirm == "Y" ]; then
    installGood=1
  elif [ $installConfirm == "n" ] || [ $installConfirm == "N" ]; then
    installGood=0
  else
    echo "Please enter only Y or N"
  fi
done

if [ $installGood -eq 1 ]; then
  echo "The latitude and longitude of your camera location is required. This can be approximate as it's only used for the sunrise and sunset timings"
  getLatitude
  getLongitude
  sudo echo -e "$lat\n$lon">back-end/gps

  cd back-end/
  sudo ./mgasc.sh

  echo "Your position has now been updated to $lat, $lon and camera timing has been updated accordingly"
fi
